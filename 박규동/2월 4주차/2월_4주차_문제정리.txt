2월 4주차 알고과제 문제정리

#백준 20356 S2
○해결전략
노드의 번호가 1,2,3,4...순으로 진행되는 이진트리 문제
먼저 온 오리가 땅을 선점했는지 체크하기 위해 visit배열을 선언
오리의 입력 순으로 solution 메소드를 실행
solution
 - 입력받은 땅을 2로 계속 나누면서 visit을 체크
 - 만약 visit이 true라면 answer를 해당 땅 번호로 갱신
 - cur이 1일때 처음 입력 받은 땅을 true로 저장하고 return한다.

평가
 - 처음에 dfs로 루트부터 시작했는데 어떻게 백트래킹을 해야 할 지 몰라서 시간초과가 났다.
 - 역으로 루트를 찾아가는 방식으로 구현해서 통과했지만 루트부터 진행하는 방법이 있을 것 같다.
 - 처음 통과할 때는 println(1904ms)으로 구현했지만 StringBuilder(572ms)를 사용하여 시간을 대폭 줄일 수 있었다.

#백준 13549 G5
○해결전략
수빈이가 다음 이동한 위치와 시간을 이용하여 동생의 위치에 최소시간으로 도달하게 하는 문제
현재위치와 위치까지 걸린 시간을 Pair로 하는 클래스 생성
왔던 위치인지 체크하기 위해 visit배열 선언 (최적값은 15만1일 것이라고 생각하지만 10만에서 두배뛰는 20만1로 크기 설정)
BFS로 구현
앞뒤로 한 칸 이동시 time을 1 증가시키고 순간이동의 경우 time을 그대로 큐에 push
도착한 위치가 동생의 위치일 경우 현재 시간을 출력 후 return한다.

평가
 - dfs도 살짝 생각해봤지만 위치가 1부터 10만까지고 최악의 경우 3의10만승이므로 bfs로 구현했다.
 - 최소값을 구하는 bfs로 구현해서 바로 time을 리턴해주면 될 것이라고 생각했지만, 이동 방식에 따라 증가하는 시간이 다르기 때문에 순간이동만으로 이동하는 경우 반례가 생겼다.
 - while문 안에서 다음 위치로 이동할때 두배로 순간이동하는 것을 먼저하고 for문의 순서가 한 칸씩 움직이는 것을 나중에 처리하여 해결했다.

#백준 12782 S5
○해결전략
두 개의 수를 1) 1과0의 위치를 swap, 2) 1을 0으로 or 0을 1로 바꾸기 두 가지 동작을 사용하여 같게 만드는 최소의 동작 수를 구하는 문제
입력으로 받을 두 개의 수를 String으로 받기
두 String에서 가지고 있는 숫자 차이(0,1이 똑같으므로 하나만 셌다), 위치에 따른 차이를 카운트
먼저 갯수를 맞추는데 필요한 방법 수를 answer에 더하기 (숫자 갯수 맞추기)
위치 차이에서 더한만큼을 빼주고 2로 나눈수를 answer에 더하기 (위치 맞추기)
answer 출력

평가
 - 비트연산, 완전탐색 등 생각해봤지만 어떤 순서로 동작을 하는지 알면 계산을 통해 알 수 있는 문제였다.