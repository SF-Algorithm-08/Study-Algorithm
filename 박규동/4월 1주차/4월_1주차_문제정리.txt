3월 3주차 문제 정리

----------------------------------------------------------------------------------------------------------------------------------------------------------
#백준 S2 3187 양치기 꿍
○Idea
 - 맵이 2차원 배열 형태로 양,늑대,땅,울타리로 구분되어 입력이 들어오고 울타리로 나눠진 구역에 남은 동물을 판별해 총 마리수를 구하는 문제
 - 울타리로 나눠진 각 구역을 BFS로 체크하면서 해당 구역 안에 양,늑대가 몇마리씩 있는지 검사
 - 체크된 구역에서 남은 동물을 카운트하면서 울타리 안은 방문 표시하여 재방문을 제한

●평가
 - 양과 늑대의 초기 좌표를 ArrayList에 담아 bfs를 돌렸다.
 - 하나의 구역을 검사할 때 양,늑대 변수를 따로 두어 살아남은 쪽의 값을 전역변수에 더해줬다.
 - 각 구역을 구분을 했는데 단순 방문체크만 해주어도 해결될 문제라고 생각한다.

----------------------------------------------------------------------------------------------------------------------------------------------------------
#백준 S1 2608 로마 숫자
○Idea
 - 로마숫자에 해당되는 문자열을 정수로 파싱하고 연산 후 결과를 다시 로마숫자로 출력하는 문제
 - 로마숫자 -> 정수는 Set에 로마숫자와 정수를 key,value로 넣어두고 계산
 - 정수 -> 로마숫자는 자릿수와 값에 따라 그리디로 차감하면서 계산

●평가
 - 로마숫자를 정수로 바꾸는 과정은 자료구조를 이용하여 짧게 구현했다.
 - 다만 정수를 다시 로마숫자로 바꾸는 과정에서 그리디 방법외에 다른 방법으로 깔끔하게 짤 수 있을것 같은데 찾지 못했다. 

----------------------------------------------------------------------------------------------------------------------------------------------------------
#백준 G5 17845 수강 과목
○Idea
 - 수강과목 가치와 각 과목의 시간이 입력으로 주어지고 제한된 시간 안에서 최대의 가치가 되도록 선택하는 문제
 - knapsack 문제, 전형적인 배낭 문제로 dp를 통한 이차원 배열로 구현

●평가
 - 수업시간에 배웠던 배낭문제 알고리즘과 동일한 방법으로 해결할 수 있는 문제였다. 
 - 문제를 배웠던 방법 그대로 풀고 찾아보니 좀 더 계산을 단축하여 최적화 할 수 있는 문제였다.
 - dp는 점화식, 규칙이 떠오르지 않으면 풀기가 너무 어려워서 이런 유명한 문제는 외우다시피 해야겠다.