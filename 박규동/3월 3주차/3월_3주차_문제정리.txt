3월 3주차 문제 정리

----------------------------------------------------------------------------------------------------------------------------------------------------------
#백준 G4 5052 전화번호 목록
○Idea
 - String들이 입력으로 들어오고 String들의 substring이 다른 String의 시작으로 사용되는지 판별하는 문제
 - Set에 번호들을 저장하고 번호들의 substring이 Set에 이미 속해있는지 검사
 - Set에 속해 있으면 "NO"를 출력하고 없으면 "YES"를 출력 

●평가
 - 단순 문자열 비교로 구현했을 때는 당연하게도 시간초과가 발생했다. 
 - 문자열 자르는 메소드를 몰라서 처음에는 직접 char 단위로 잘라서 부문자열을 구했다. 
 - 찾아보고 substring 메소드를 적용하여 코드를 개선했는데 자주 사용할 것 같으니 외워두자. 

----------------------------------------------------------------------------------------------------------------------------------------------------------
#백준 S1 6118 숨박꼭질
○Idea
 - 1번으로 부터 가장 멀리 떨어진 헛간의 갯수와 거리, 최소 헛간 번호를 출력하는 문제
 - 인접리스트로 각 헛간에서 갈 수 있는 곳을 양방향으로 구현
 - 1번 헛간부터 시작하는 bfs를 돌고 visit에 true대신 거리를 저장
 - visit배열에서 값이 최대인 것과 그 갯수 그리고 처음 나온 인덱스를 출력

●평가
 - 단순히 인접리스트와 bfs로 바로 풀 수있는 쉬운 문제였다.
 - 다만 답을 찾는 과정에서 헛간 번호, 거리, 갯수를 구하는 과정에서 살짝 헷갈려 Queue에서 정보를 같이 넘겨줄까도 생각했지만, visit배열
에서 바로 찾아 줄 수 있었다.  

----------------------------------------------------------------------------------------------------------------------------------------------------------
#백준 G4 2573 빙산
○Idea
 - 입력으로 하나로 이어진 빙산의 높이들이 주어지고 주변 4방에 바닷물이 있는 영역만큼씩 높이가 줄어들때 두 지역 이상으로 갈라지는 시점을 구하는 문제
 - while문을 돌면서 isTwo()(빙산이 두 개 이상인지) 체크, melt()(빙산 녹이기) 진행 후 시간을 1씩 증가 시킨다.
 - isTwo()는 bfs로 구현, 현재 빙산의 한 점을 bfs로 돌아 방문하지 않은 빙산이 있으면 true를 리턴
 - melt()는 각 빙산좌표들을 하나씩 검사해 이번 depth에 얼마나 녹는지를 copymap에 저장 후 원래 빙산에서 빼준다.
 - while문이 종료되는 시점(1. 빙산이 다 녹았다 2. 두 개 이상으로 갈라졌다)에 상태에 따라 answer를 출력 

●평가
 - 빙산을 녹일때 녹인 후에 다음 좌표로 넘어가면 결과가 달라질 수 있어서 동시에 녹이는게 중요했다.
 - 시뮬레이션 문제인데 마음가는대로 바로 풀어서 최적화가 엉망이다.
 - 제한 시간은 1초로 나와있는데 채점해보니 1000ms가 넘는데 통과였다. 스터디때  좀 더 최적화 된 사람들 코드를 참고하고 다시 풀어봐야 할 문제다.